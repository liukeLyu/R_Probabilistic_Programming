devtools::install_github("mhtess/rwebppl")
library(rwebppl)
my_model <- '
var model = function () {
var a = flip(0.3)
var b = flip(0.6)
return a + b
}
model()
'
webppl(my_model)
webppl(my_model)
webppl(my_model)
webppl(my_model)
my_model <- '
var model = function(){
var p = uniform(0, 1)
map(function(d){
observe(Binomial({n: d.n, p: p}), d.k)
}, myDF)
return p
}
Infer({model: model, method: "MCMC"})
'
webppl(my_model, data = df, data_var = "myDF")
df <- tibble(
n = c(9,5,3),
k = c(6,3,2)
)
library(tidyverse)
df <- tibble(
n = c(9,5,3),
k = c(6,3,2)
)
webppl(my_model, data = df, data_var = "myDF")
result <- webppl(my_model, data = df, data_var = "myDF")
result
result %>%
rename(p = value)
result %>%
mutate(p_hypo = value, prob = exp(score))
result %>%
transmute(p_hypo = value, prob = exp(score))
result %>%
transmute(p_hypo = value, prob = exp(score)) %>%
ggplot(aes(x=p_hypo, y=prob)) %>%
geom_point()
result %>%
transmute(p_hypo = value, prob = exp(score)) %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_point()
result %>%
transmute(p_hypo = value, prob = exp(score)) %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
result$value
sum(result$value)
sum(result$exp(score))
result$score %>% exp %>% sum
my_model <- '
var model = function(){
var p = uniform(0, 1)
map(function(d){
observe(Binomial({n: d.n, p: p}), d.k)
}, myDF)
return p
}
Infer({model: model, method: "MCMC", samples: 5000})
'
result <- webppl(my_model, data = df, data_var = "myDF")
result %>%
transmute(p_hypo = value, prob = exp(score)) %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
result$score %>% exp %>% sum
result$score %>% exp
sum(result$score %>% exp)
result %>%
transmute(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
result %>%
transmute(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob))
result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob))
result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
sult <- webppl(my_model, data = df, data_var = "myDF")
result <- result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
rm(sult)
result <- webppl(my_model, data = df, data_var = "myDF")
result <- result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
result
result %>%
ggplot(aes(x=p_hypo, y=prob)) %>%
geom_line()
result %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
my_model <- '
var model = function(){
var p = uniform(0, 1)
map(function(d){
observe(Binomial({n: d.n, p: p}), d.k)
}, myDF)
return p
}
Infer({model: model, method: "MCMC", samples: 10000})
'
df <- tibble(
n = c(9,5,3),
k = c(6,3,2)
)
result <- webppl(my_model, data = df, data_var = "myDF")
result <- result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
result %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
result
webppl(program_file = "./particle_decay.wppl")
webppl(program_file = "./particle_decay.wppl")
result_particle_decay <- webppl(program_file = "./particle_decay.wppl")
norm_dist <- function(result){
result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
}
result <- webppl(my_model, data = df, data_var = "myDF")
result <- webppl(my_model, data = df, data_var = "myDF") %>% norm_dist()
result
webppl(my_model, data = df, data_var = "myDF") %>% norm_dist()
norm_dist <- function(result){
df <- result %>%
mutate(p_hypo = value,
unsd_prob = exp(score),
prob = unsd_prob / sum(unsd_prob)) %>%
select(p_hypo, prob)
df %>%
ggplot(aes(x=p_hypo, y=prob))+
geom_line()
}
webppl(my_model, data = df, data_var = "myDF") %>% norm_dist()
webppl(program_file = "./particle_decay.wppl") %>% norm_dist()
webppl(program_file = "./particle_decay.wppl",
data = c(1.5, 2, 3, 4, 5, 12), data_Var = "data") %>%
norm_dist()
webppl(program_file = "./particle_decay.wppl",
data = c(1.5, 2, 3, 4, 5, 12), data_var = "data") %>%
norm_dist()
