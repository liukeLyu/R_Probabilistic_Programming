plot( p_grid , posterior , type="d" ,
xlab="probability of water" , ylab="posterior probability" )
plot( p_grid , posterior , type="d" ,
xlab="probability of water" , ylab="posterior probability" )
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
# define grid
p_grid <- seq( from=0 , to=1 , length.out=20 )
# define prior
prior <- rep( 1 , 20 )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( 3 , size=3 , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( 3 , size=4 , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( 5 , size=7 , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
grid_method <- function(w, n, Ngrid){
# define grid
p_grid <- seq( from=0 , to=1 , length.out=Ngrid )
# define prior
prior <- rep( 1 , Ngrid )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( w , size=n , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
}
dbinom(6 , size=9 , prob=0.5)
grid_method(6,9,20)
grid_method(6,9,30)
grid_method(6,10,30)
dunif(0.3,0.1)
# Install rethinking package
# install.packages(c("coda","mvtnorm","devtools","loo"))
# library(devtools)
# devtools::install_github("rmcelreath/rethinking")
# library(tidyverse)
ways <- c(0,3,8,9,0)
ways / sum(ways)
dbinom(6 , size=9 , prob=0.5)
grid_method <- function(w, n, Ngrid){
# define grid
p_grid <- seq( from=0 , to=1 , length.out=Ngrid )
# define prior
prior <- rep( 1 , Ngrid )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( w , size=n , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
}
grid_method(6,10,30)
library(rethinking)
globe.qa <- map(
list(
w ~ dbinom(9,p) , # binomial likelihood
p ~ dunif(0,1) # uniform prior
) ,
data=list(w=6) )
# display summary of quadratic approximation
precis( globe.qa )
# analytical calculation
w <- 6
n <- 9
curve( dbeta( x , w+1 , n-w+1 ) , from=0 , to=1 )
# quadratic approximation
curve( dnorm( x , 0.67 , 0.16 ) , lty=2 , add=T )
# try curve function
# curve(sin(x*log(x)),0,1)
grid_method(3,3,20)
grid_method(3,4,20)
grid_method(5,7,20)
grid_method <- function(w, n, Ngrid=20){
# define grid
p_grid <- seq( from=0 , to=1 , length.out=Ngrid )
# define prior
prior <- rep( 1 , Ngrid )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( w , size=n , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
}
grid_method(3,3,20)
grid_method(3,3)
grid_method(3,4)
grid_method(5,7)
grid_method <- function(w, n, Ngrid=20, prior_type="uniform"){
# define grid
p_grid <- seq( from=0 , to=1 , length.out=Ngrid )
# define prior
prior <- switch(prior_type,
uniform = rep( 1 , Ngrid ),
half = ifelse( p_grid < 0.5 , 0 , 1 ),
peak = exp( -5*abs( p_grid - 0.5 ) ))
# prior <- rep( 1 , Ngrid )
# prior <- ifelse( p_grid < 0.5 , 0 , 1 )
# prior <- exp( -5*abs( p_grid - 0.5 ) )
# compute likelihood at each value in grid
likelihood <- dbinom( w , size=n , prob=p_grid )
# compute product of likelihood and prior
unstd.posterior <- likelihood * prior
# standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
plot( p_grid , posterior , type="b" ,
xlab="probability of water" , ylab="posterior probability" )
mtext( "20 points" )
}
grid_method(6,10,30)
grid_method(3,4)
grid_method(3,4, "uniform")
grid_method(3,4, prior_type = "uniform")
grid_method(3,4, prior_type = "half")
grid_method(3,4, prior_type = "half", Ngrid = 30)
grid_method(3,4, prior_type = "half", Ngrid = 50)
grid_method(3,3, prior_type = "half")
grid_method(5,7, prior_type = "peak")
grid_method(5,7, prior_type = "half")
grid_method(3,3, prior_type = "half", Ngrid = 50)
grid_method(5,7, prior_type = "half", Ngrid = 50)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
source('~/academic/stan/statistical_rethinking/SamplingTheImaginary.R', echo=TRUE)
posterior
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
samples
plot(p_grid, posterior)
plot(p_grid, posterior, lty=2)
plot(p_grid, posterior, lty=2)
plot(p_grid, posterior, type="b")
plot(p_grid, posterior, type="b")
plot(samples)
plot(samples, alpha=0.1)
dens(samples)
dens(samples, add=T)
plot(p_grid, posterior, type="b")
dens(samples, add=T)
# plot(p_grid, posterior, type="b")
dens(samples, add=T)
# plot(p_grid, posterior, type="b")
dens(samples)
plot(p_grid, posterior, type="b")
# plot(p_grid, posterior, type="b")
dens(samples)
source('~/academic/stan/statistical_rethinking/SamplingTheImaginary.R', echo=TRUE)
library(rethinking)
dens(samples)
sum( posterior[ p_grid < 0.5 ] )
posterior
posterior[p_grid < 0.5]
sum( posterior[ p_grid < 0.5 ] )
sum(samples < 0.5) / 1e4
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sum(samples < 0.5) / 1e4
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sum(samples < 0.5) / 1e4
sum( samples > 0.5 & samples < 0.75 ) / 1e4
samples < 0.5
quantile(samples, 0.8)
quantile( samples , c( 0.1 , 0.9 ) )
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep(1,1000)
likelihood <- dbinom( 3 , size=3 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , size=1e4 , replace=TRUE , prob=posterior )
samples
posterior %>% plot
library(rethinking)
library(magrittr)
library(magrittr)
posterior %>% plot
plot(p_grid, posterior)
plot(samples)
dens(samples)
PI(samples, prob=0.5)
HPDI(samples, prob = 0.5)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep(1,1000)
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , size=1e4 , replace=TRUE , prob=posterior )
plot(p_grid, posterior)
dens(samples)
PI(samples, prob=0.5)
HPDI(samples, prob = 0.5)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep(1,1000)
likelihood <- dbinom( 3 , size=3 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , size=1e4 , replace=TRUE , prob=posterior )
plot(p_grid, posterior)
dens(samples)
PI(samples, prob = 0.5)
HPDI(samples, prob = 0.5)
which.max(posterior)
p_grid[which.max(posterior)]
chainmode(samples, adj=0.001)
chainmode(samples, adj=0.01)
mean(samples)
median(samples)
plot(p_grid, posterior)
plot(p_grid, posterior, lwd=0.5)
plot(p_grid, posterior, type="l")
abline(v = mean(samples))
abline(v = median(samples))
abline(v = chainmode(samples, adj=0.01))
abline(v = mean(samples), color="blue")
plot(p_grid, posterior, type="l")
abline(v = mean(samples), col="blue")
abline(v = median(samples), col="purple")
abline(v = chainmode(samples, adj=0.01), col="red")
3.17 sum( posterior*abs( 0.5 - p_grid ) )
sum( posterior*abs( 0.5 - p_grid ) )
loss <- sapply( p_grid , function(d) sum( posterior*abs( d - p_grid ) ) )
loss
plot(loss, add=T)
plot(loss, add=T, type="l")
p_grid[ which.min(loss)]
median(sample)
median(samples)
loss <- sapply( p_grid , function(d) sum( posterior*( d - p_grid )^2 ) )
plot(loss, add=T, type="l")
p_grid[ which.min(loss)]
median(samples)
mean(samples)
dbinom( 0:2 , size=2 , prob=0.7 )
rbinom( 1 , size=2 , prob=0.7 )
rbinom( 10 , size=2 , prob=0.7 )
dummy_w <- rbinom( 1e5 , size=2 , prob=0.7 )
table(dummy_w)/1e5
dbinom( 0:2 , size=2 , prob=0.7 )
dummy_w <- rbinom( 1e5 , size=2 , prob=0.7 )
table(dummy_w)/1e5
dbinom( 0:2 , size=2 , prob=0.7 )
dummy_w <- rbinom( 1e5 , size=9 , prob=0.7 )
table(dummy_w)/1e5
simplehist(dummy_w)
simplehist(dummy_w, xlab="dummy water count")
3.25 w <- rbinom( 1e4 , size=9 , prob=0.6 )
w <- rbinom( 1e4 , size=9 , prob=0.6 )
w
samples
w <- rbinom( 1e4 , size=9 , prob=samples )
w
simplehist(w)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep(1,1000)
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , size=1e4 , replace=TRUE , prob=posterior )
plot(p_grid, posterior, type="l")
dens(samples)
PI(samples, prob = 0.5)
HPDI(samples, prob = 0.5)
w <- rbinom( 1e4 , size=9 , prob=samples )
simplehist(w)
# Practice
## Easy
quantile(samples, 0.8)
# Practice
## Easy
p_grid[posterior < 0.2]
# Practice
## Easy
sum(samples < 0.2)/length(samples)
sum(samples > 0.8)/length(samples)
sum(samples > 0.2 & samples < 0.8)/length(samples)
quantile(samples, 0.2)
quantile(samples, 0.8)
HPDI(samples, prob = 0.66)
PI(samples, prob = 0.66)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
HPDI(samples, prib = 0.9)
HPDI(samples, prob = 0.9)
w <- rbinom(1e4, size=15, prob=samples)
simplehist(w)
samples9 <- rbinom(1e4, size=9, prob=samples)
samples9
sum(samples9 == 6) / 1e4
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- ifelse( p_grid < 0.5 , 0 , 1 )
likelihood <- dbinom( 8 , size=15 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
HPDI(samples, prob = 0.9)
w <- rbinom(1e4, size=15, prob=samples)
simplehist(w)
samples9 <- rbinom(1e4, size=9, prob=samples)
sum(samples9 == 6) / 1e4
w
samples
birth1 <- c(1,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0,
0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0,
1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,0,
1,0,1,1,1,0,1,1,1,1)
birth2 <- c(0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,
1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1,
0,0,0,1,1,1,0,0,0,0)
birth1
birth2
rm(birth2, birth1)
## Hard
data(homeworkch3)
birth1
sum(birth1)+sum(birth2)
length(birth1)+length(birth2)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- ifelse( p_grid < 0.5 , 0 , 1 )
likelihood <- dbinom( sum(birth1)+sum(birth2) , size=length(birth1)+length(birth2) , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
simplehist(samples)
# simplehist(samples)
samples
prior <- rep( 1 , 1000 )
likelihood <- dbinom( sum(birth1)+sum(birth2) , size=length(birth1)+length(birth2) , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
# simplehist(samples)
samples
simplehist(samples)
p_grid
samples
hist(samples)
chainmode(samples)
samples
PI(samples)
PI(samples, prob = 0.5)
plot(posterior)
which.max(posterior)
p_grid(which.max(posterior))
p_grid[which.max(posterior)]
chainmode(samples)
HPDI(samples, prob=0.5)
HPDI(samples, prob=0.89)
HPDI(samples, prob=0.97)
w <- rbinom(1e4, size=200, prob = samples)
hist(w)
simplehist(w)
den(w)
dens(w)
sum(birth1)
birth2[birth1 == 0]
sum(birth2[birth1 == 0])
follow_girl = birth2[birth1 == 0]
w <- rbinom(1e4, size=100, prob = samples)
dens(w)
simplehist(w)
follow_girl = birth2[birth1 == 0]
sum(follow_girl)
sum(follow_girl) / length(follow_girl)
length(follow_girl)
w <- rbinom(1e4, size=49, prob = samples)
simplehist(w)
sum( runif(16,-1,1)
sum( runif(16,-1,1))
sum( runif(16,-1,1))
repeat(1000, sum(runif(16,-1,1)))
replicate(1000, sum(runif(16,-1,1)))
pos <- replicate(1000, sum(runif(16,-1,1)))
hist(pos)
dens(pos)
density(pos)
plot(density(pos))
prod( 1 + runif(12,0,0.1) )
growth <- replicate(1e4, prod( 1 + runif(12,0,0.1) ))
dens(growth)
library(rethinking)
dens(growth)
growth <- replicate(1e3, prod( 1 + runif(12,0,0.1) ))
dens(growth)
growth <- replicate(1e4, prod( 1 + runif(12,0,0.1) ))
dens(growth)
big <- replicate(1e4, prod( 1 + runif(12,0,0.5) ))
dens(growth)
dens(big)
small <- replicate(1e4, prod( 1 + runif(12,0,0.01) ))
dens(small)
log.big <- replicate( 10000 , log(prod(1 + runif(12,0,0.5))) )
dens(log.big)
dens(log.big)
dens(log.big)
dnorm(0,0,0.1)
data("Howell1")
Howell1
head(Howell1)
d <- head(Howell1)
?str
str(d)
d <- Howell1
str(d)
d
tibble(d)
library(tidyverse )
library(tidyverse)
library(rethinking
)
library(tidyverse)
library(rethinking)
data("Howell1")
d <- as_tibble(Howell1)
str(d)
d
d %>%
filter(age >= 18)
d %>%
filter(age >= 18) %>%
.$height
d %>%
filter(age >= 18) %>%
.$height %>%
dens
curve(dnorm(x, 178, 20), from = 100, to = 250)
d %>%
filter(age >= 18) %>%
ggplot(aes(x=height))+
geom_histogram()
d %>%
filter(age >= 18) %>%
ggplot(aes(x=height))+
geom_density()
d %>%
filter(age >= 18) %>%
ggplot(aes(x=height))+
geom_density(stat = "density")
curve(dnorm(x, 178, 20), from = 100, to = 250)
d %>%
filter(age >= 18) %$%
dens(height)
library(magrittr)
d %>%
filter(age >= 18) %$%
dens(height)
tibble(
sample_mu = rnorm(1e4, 178, 20),
sample_sigma = runif(1e4, 0, 50),
prior_h = rnorm(1e4, sample_mu, sample_sigma)
)
tibble(
sample_mu = rnorm(1e4, 178, 20),
sample_sigma = runif(1e4, 0, 50),
prior_h = rnorm(1e4, sample_mu, sample_sigma)
)
tibble(
sample_mu = rnorm(1e4, 178, 20),
sample_sigma = runif(1e4, 0, 50),
prior_h = rnorm(1e4, sample_mu, sample_sigma)
) %$%
dens(prior_h)
